// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correct.js - {"yieldStarSpacing":true,"generatorStarSpacing":true,"spaceBeforeFunctionParen":true,"singleQuote":true,"jsxSingleQuote":true,"semi":false,"trailingComma":"none"} format 1`] = `
====================================options=====================================
generatorStarSpacing: true
jsxSingleQuote: true
parsers: ["babel-flow", "babel", "flow"]
printWidth: 80
semi: false
singleQuote: true
spaceBeforeFunctionParen: true
trailingComma: "none"
yieldStarSpacing: true
                                                                                | printWidth
=====================================input======================================
type IdentityWrapper = {
  func<T>(T): T
}

const identity2 = <T>(t: T): T => t

const a = 1

function identity<T> (value: T): T {
  return value
}

interface Foo<T> {
  getter(value: T): T;
}

class Example<T> implements Foo<T> {
  value: T
  getter (value: T): T {
    return this.value
  }
  set setter (value: T) {
    this.value = value
  }
}

=====================================output=====================================
type IdentityWrapper = {
  func<T>(T): T
}

const identity2 = <T>(t: T): T => t

const a = 1

function identity<T> (value: T): T {
  return value
}

interface Foo<T> {
  getter(value: T): T;
}

class Example<T> implements Foo<T> {
  value: T
  getter (value: T): T {
    return this.value
  }
  set setter (value: T) {
    this.value = value
  }
}

================================================================================
`;

exports[`incorrect.js - {"yieldStarSpacing":true,"generatorStarSpacing":true,"spaceBeforeFunctionParen":true,"singleQuote":true,"jsxSingleQuote":true,"semi":false,"trailingComma":"none"} format 1`] = `
====================================options=====================================
generatorStarSpacing: true
jsxSingleQuote: true
parsers: ["babel-flow", "babel", "flow"]
printWidth: 80
semi: false
singleQuote: true
spaceBeforeFunctionParen: true
trailingComma: "none"
yieldStarSpacing: true
                                                                                | printWidth
=====================================input======================================
type IdentityWrapper = {
  func <T>(T) :T
}

function identity <T>(value :T) :T {
  return value
}

interface Foo <T>{
  getter(value:T):T
}

class Example<T> implements Foo <T>{
  value:T;
  getter(value :T) :T {
    return this.value
  }
  set setter(value :T) {
    this.value = value
  }
}

=====================================output=====================================
type IdentityWrapper = {
  func<T>(T): T
}

function identity<T> (value: T): T {
  return value
}

interface Foo<T> {
  getter(value: T): T;
}

class Example<T> implements Foo<T> {
  value: T
  getter (value: T): T {
    return this.value
  }
  set setter (value: T) {
    this.value = value
  }
}

================================================================================
`;
